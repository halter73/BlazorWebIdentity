@page "/Identity/Account/Manage/TwoFactorAuthentication"

@using BlazorWeb.Identity.Data
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Identity

@inject UserManager<BlazorWebUser> UserManager
@inject SignInManager<BlazorWebUser> SignInManager
@inject NavigationManager NavigationManager

<PageTitle>Two-factor authentication (2FA)</PageTitle>

<StatusMessage Message="@_message" />
<h3>Two-factor authentication (2FA)</h3>
@if (_consentFeature?.CanTrack ?? true)
{
    if (_is2faEnabled)
    {
        if (_recoveryCodesLeft == 0)
        {
            <div class="alert alert-danger">
                <strong>You have no recovery codes left.</strong>
                <p>You must <a href="/Identity/Account/Manage/GenerateRecoveryCodes">generate a new set of recovery codes</a> before you can log in with a recovery code.</p>
            </div>
        }
        else if (_recoveryCodesLeft == 1)
        {
            <div class="alert alert-danger">
                <strong>You have 1 recovery code left.</strong>
                <p>You can <a href="/Identity/Account/Manage/GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
            </div>
        }
        else if (_recoveryCodesLeft <= 3)
        {
            <div class="alert alert-warning">
                <strong>You have @_recoveryCodesLeft recovery codes left.</strong>
                <p>You should <a href="/Identity/Account/Manage/GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
            </div>
        }

        if (_isMachineRemembered)
        {
            <form style="display: inline-block" @formname="forget-browser" @onsubmit="OnSubmitForgetBrowserAsync" method="post">
                <button type="submit" class="btn btn-primary">Forget this browser</button>
            </form>
        }

        <a href="/Identity/Account/Manage/Disable2fa" class="btn btn-primary">Disable 2FA</a>
        <a href="/Identity/Account/Manage/GenerateRecoveryCodes" class="btn btn-primary">Reset recovery codes</a>
    }

    <h4>Authenticator app</h4>
    @if (!_hasAuthenticator)
    {
        <a id="enable-authenticator" href="/Identity/Account/Manage/EnableAuthenticator" class="btn btn-primary">Add authenticator app</a>
    }
    else
    {
        <a id="enable-authenticator" href="/Identity/Account/Manage/EnableAuthenticator" class="btn btn-primary">Set up authenticator app</a>
        <a id="reset-authenticator" href="/Identity/Account/Manage/ResetAuthenticator" class="btn btn-primary">Reset authenticator app</a>
    }
}
else
{
    <div class="alert alert-danger">
        <strong>Privacy and cookie policy have not been accepted.</strong>
        <p>You must accept the policy before you can enable two factor authentication.</p>
    </div>
}

@code {
    private string? _message;
    private BlazorWebUser? _user;
    private ITrackingConsentFeature? _consentFeature;
    private bool _hasAuthenticator;
    private int _recoveryCodesLeft;
    private bool _is2faEnabled;
    private bool _isMachineRemembered;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        (_user, _message) = await UserManager.GetUserAsync(AuthenticationStateTask);
        if (_user is null)
        {
            return;
        }

        _consentFeature = HttpContext.Features.Get<ITrackingConsentFeature>();
        _hasAuthenticator = await UserManager.GetAuthenticatorKeyAsync(_user) is not null;
        _is2faEnabled = await UserManager.GetTwoFactorEnabledAsync(_user);
        _isMachineRemembered = await SignInManager.IsTwoFactorClientRememberedAsync(_user);
        _recoveryCodesLeft = await UserManager.CountRecoveryCodesAsync(_user);
    }

    private async Task OnSubmitForgetBrowserAsync()
    {
        if (_user is null)
        {
            return;
        }

        await SignInManager.ForgetTwoFactorClientAsync();

        NavigationManager.RedirectToCurrentPage(new()
            {
                ["Message"] = "The current browser has been forgotten. When you login again from this browser you will be prompted for your 2fa code.",
            });
    }
}
