@page "/Identity/Account/Manage/ResetAuthenticator"

@using BlazorWeb.Identity.Data
@using Microsoft.AspNetCore.Identity

@inject UserManager<BlazorWebUser> UserManager
@inject SignInManager<BlazorWebUser> SignInManager
@inject NavigationManager NavigationManager
@inject ILogger<ResetAuthenticator> Logger

<PageTitle>Reset authenticator key</PageTitle>

<StatusMessage Message="@_message" />
<h3>Reset authenticator key</h3>
<div class="alert alert-warning" role="alert">
    <p>
        <span class="glyphicon glyphicon-warning-sign"></span>
        <strong>If you reset your authenticator key your authenticator app will not work until you reconfigure it.</strong>
    </p>
    <p>
        This process disables 2FA until you verify your authenticator app.
        If you do not complete your authenticator app configuration you may lose access to your account.
    </p>
</div>
<div>
    <form id="reset-authenticator-form" @formname="reset-authenticator" @onsubmit="OnSubmitAsync" method="post">
        <AntiforgeryToken />
        <button id="reset-authenticator-button" class="btn btn-danger" type="submit">Reset authenticator key</button>
    </form>
</div>

@code {
    private string? _message;
    private BlazorWebUser? _user;

    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        (_user, _message) = await UserManager.GetUserAsync(AuthenticationStateTask);
    }

    private async Task OnSubmitAsync()
    {
        if (_user is null)
        {
            return;
        }

        await UserManager.SetTwoFactorEnabledAsync(_user, false);
        await UserManager.ResetAuthenticatorKeyAsync(_user);
        var userId = await UserManager.GetUserIdAsync(_user);
        Logger.LogInformation("User with ID '{UserId}' has reset their authentication app key.", _user.Id);

        await SignInManager.RefreshSignInAsync(_user);

        NavigationManager.RedirectTo(
            "/Identity/Account/Manage/EnableAuthenticator",
            new() { ["Message"] = "Your authenticator app key has been reset, you will need to configure your authenticator app using the new key." });
    }
}
